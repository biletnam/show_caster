# Place all the behaviors and hooks related to the matching controller here.
# All this logic will automatically be available in application.js.
# You can use CoffeeScript in this file: http://coffeescript.org/
# The Browser API key obtained from the Google API Console.
# var developerKey = 'xxxxxxxYYYYYYYY-12345678';
# var developerKey = 'sesames-198815';
developerKey = 'AIzaSyAaIJVB82ttlDdgiYCAGlRkqW-arvmFyEY'
# The Client ID obtained from the Google API Console. Replace with your own Client ID.
clientId = '1032052701730-nfa20fm4mttqmctnb0aa7076rhi0lkvn.apps.googleusercontent.com'
# Scope to use to access user's photos.
scope = 'https://www.googleapis.com/auth/photos'
pickerApiLoaded = false
oauthToken = undefined
# Use the API Loader script to load google.picker and gapi.auth.

onApiLoad = ->
  alert '1'
  gapi.load 'auth2', onAuthApiLoad
  gapi.load 'picker', onPickerApiLoad
  return

onAuthApiLoad = ->
  authBtn = document.getElementById('auth')
  authBtn.disabled = false
  authBtn.addEventListener 'click', ->
    gapi.auth2.authorize {
      client_id: clientId
      scope: scope
    }, handleAuthResult
    return
  return

onPickerApiLoad = ->
  pickerApiLoaded = true
  createPicker()
  return

handleAuthResult = (authResult) ->
  if authResult and !authResult.error
    oauthToken = authResult.access_token
    createPicker()
  else
    alert 'Error with auth'
  return

# Create and render a Picker object for picking user Photos.

createPicker = ->
  if pickerApiLoaded and oauthToken
    picker = (new (google.picker.PickerBuilder)).addView(google.picker.ViewId.PHOTOS).setOAuthToken(oauthToken).setDeveloperKey(developerKey).setCallback(pickerCallback).build()
    picker.setVisible true
  return

# A simple callback implementation.

pickerCallback = (data) ->
  url = 'nothing'
  if data[google.picker.Response.ACTION] == google.picker.Action.PICKED
    doc = data[google.picker.Response.DOCUMENTS][0]
    url = doc[google.picker.Document.URL]
  message = 'You picked: ' + url
  document.getElementById('result').innerHTML = message
  return

# ---
# generated by js2coffee 2.2.0
